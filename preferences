//add preferences
router.post('/user/userID', async (req,res)=>{
    
    const newPreference = new preferenceSchema(req.body);
    
    try {
        const preferenceToSave = await newPreference.save();
        if(!newPreference) throw Error('Failed to save preference');
        console.log('Preference saved');
        res.status(201).json(newPreference);
    } catch (error) {
        res.status(400).json({msg:error});
    }
});

//update preferences
router.patch('/:id', async (req,res) => {
    try {
        const updatePreferences = await preferenceSchema.findByIdAndUpdate(req.params.id,req.body);
        if(!updatePreferences) throw Error ('Preference not found');
        res.status(200).json({success : true});
    } catch (error) {
        res.status(400).json({msg:error});
    }
});

//delete preference
router.delete('/:id', async (req,res) =>{
    try {
        const deletePreference = await preferenceSchema.findByIdAndDelete(req.params.id);
        if (!deletePreference) throw Error ('Preference nor Found');
        res.status(200).json({deleted : true});
    } catch (error) {
        res.status(400).json({msg:error});
    }
});

//get preferences
//all preferences
router.get('/', async (req,res) => {
    try {
        const preferencesList = await preferenceSchema.find()
        if(!preferenceSchema) throw Error ('No Preference');
        res.status(200).json(preferenceList);
    } catch (error) {
        res.status(400).json({msg:error});
    }
});